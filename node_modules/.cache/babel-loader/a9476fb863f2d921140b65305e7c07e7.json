{"ast":null,"code":"var _jsxFileName = \"/Users/arjavpatel/Documents/EECS_449/marvin-app/src/components/professor-marvin.component.js\";\nimport React, { Component, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport './professor-marvin.css';\nimport UploadService from \"./services/upload-files.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ProfessorMarvin extends Component {\n  constructor(props) {\n    super(props);\n    this.delay = ms => new Promise(res => setTimeout(res, ms));\n    this.onDrop = files => {\n      if (files.length > 0) {\n        this.setState({\n          selectedFiles: files\n        });\n      }\n    };\n    this.componentDidMount = () => {\n      UploadService.getFiles().then(files => {\n        this.setState({\n          fileInfos: files.data['data']\n        });\n      });\n    };\n    this.upload = async () => {\n      let currentFile = this.state.selectedFiles[0];\n      this.setState({\n        progress: 0,\n        currentFile: currentFile\n      });\n      await UploadService.upload(currentFile).then(response => {\n        this.setState({\n          message: response.message\n        });\n        if (response.already_exists) {\n          this.setState({\n            delay: 0,\n            progress: 0\n          });\n        } else {\n          this.setState({\n            delay: 500,\n            progress: 100\n          });\n        }\n        return UploadService.getFiles();\n      }).then(files => {\n        this.setState({\n          fileInfos: files.data['data']\n        });\n      }).catch(() => {\n        console.log('failed');\n        this.setState({\n          progress: 0,\n          delay: 0,\n          message: \"ERROR: File is not a PDF\",\n          currentFile: undefined\n        });\n      });\n      await this.delay(this.state.delay);\n      this.setState({\n        selectedFiles: undefined,\n        progress: 0\n      });\n    };\n    this.removeFile = async filename => {\n      await UploadService.removeFile(filename).then(response => {\n        this.setState({\n          message: response.message\n        });\n        return UploadService.getFiles();\n      }).then(files => {\n        this.setState({\n          fileInfos: files.data['data']\n        });\n      }).catch(() => {\n        this.setState({\n          message: \"ERROR: File unable to be deleted\"\n        });\n      });\n    };\n    this.deleteAll = async () => {\n      await UploadService.resetApp().then(response => {\n        this.setState({\n          message: response.message\n        });\n        return UploadService.getFiles();\n      }).then(files => {\n        this.setState({\n          fileInfos: files.data['data']\n        });\n      }).catch(() => {\n        this.setState({\n          message: \"ERROR: Unable to delete all files\"\n        });\n      });\n    };\n    this.state = {\n      selectedFiles: undefined,\n      currentFile: undefined,\n      progress: 0,\n      delay: 0,\n      fileInfos: []\n    };\n  }\n  render() {\n    const {\n      selectedFiles,\n      currentFile,\n      progress,\n      message,\n      fileInfos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"Professor Marvin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: fileInfos.map(currFile => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"card-text-big\",\n                href: /*require(\"./../pdf_uploads/\"+currFile.file.name)*/\"/static/media/\" + currFile.file.name,\n                target: \"_blank\",\n                rel: \"noreferrer\",\n                children: currFile.file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), \"\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-delete\",\n                onClick: async () => {\n                  await this.removeFile(currFile.file.name);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this)\n          }, currFile.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"selected-file-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-delete-all\",\n          disabled: this.state.fileInfos.length == 0,\n          onClick: this.deleteAll,\n          children: \"Delete All Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Find\",\n        style: \"float: right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: \"overflow: hidden; padding-right: .5em;\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: \"width: 100%;\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/upload_page\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-go-to-upload\",\n            children: \"< Edit Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","useState","Dropzone","UploadService","ProfessorMarvin","constructor","props","delay","ms","Promise","res","setTimeout","onDrop","files","length","setState","selectedFiles","componentDidMount","getFiles","then","fileInfos","data","upload","currentFile","state","progress","response","message","already_exists","catch","console","log","undefined","removeFile","filename","deleteAll","resetApp","render","map","currFile","file","name","index"],"sources":["/Users/arjavpatel/Documents/EECS_449/marvin-app/src/components/professor-marvin.component.js"],"sourcesContent":["import React, { Component, useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport './professor-marvin.css';\nimport UploadService from \"./services/upload-files.service\";\n\nexport default class ProfessorMarvin extends Component {\n    constructor(props) {\n        super(props);    \n        this.state = {\n          selectedFiles: undefined,\n          currentFile: undefined,\n          progress: 0,\n          delay: 0,\n          fileInfos: [],\n        };\n      }\n\n    delay = ms => new Promise(res => setTimeout(res, ms));\n\n    onDrop = (files) => {\n        if (files.length > 0) {\n          this.setState({ selectedFiles: files });\n        }\n    }\n    componentDidMount = () => {\n        UploadService.getFiles().then((files) => {\n          this.setState({\n            fileInfos: files.data['data'],\n          });\n        });\n    }\n\n    upload = async () => {\n        let currentFile = this.state.selectedFiles[0];\n\n        this.setState({\n          progress: 0,\n          currentFile: currentFile,\n        });\n        \n        await UploadService.upload(currentFile)\n          .then((response) => {\n            this.setState({\n              message: response.message,\n            });\n\n            if (response.already_exists) {\n              this.setState({\n                delay: 0,\n                progress: 0\n              });\n            }\n            else {\n              this.setState({\n                delay: 500,\n                progress: 100\n              });\n            }\n\n            return UploadService.getFiles();\n          })\n          .then((files) => {\n            this.setState({\n              fileInfos: files.data['data'],\n            });\n            \n          })\n          .catch(() => {\n            console.log('failed');\n            this.setState({\n              progress: 0,\n              delay: 0,\n              message: \"ERROR: File is not a PDF\",\n              currentFile: undefined,\n            });\n          });\n\n        await this.delay(this.state.delay);\n        this.setState({\n          selectedFiles: undefined,\n          progress: 0,\n        });\n\n    }\n\n    removeFile = async (filename) => {     \n      await UploadService.removeFile(filename)\n        .then((response) => {\n          this.setState({\n            message: response.message,\n          });\n          return UploadService.getFiles();\n        })\n        .then((files) => {\n          this.setState({\n            fileInfos: files.data['data'],\n          });\n        })\n        .catch(() => {\n          this.setState({\n            message: \"ERROR: File unable to be deleted\",\n          });\n        });\n    }\n\n    deleteAll = async () => {\n      await UploadService.resetApp()\n        .then((response) => {\n          this.setState({\n            message: response.message,\n          });\n          return UploadService.getFiles();\n        })\n        .then((files) => {\n          this.setState({\n            fileInfos: files.data['data'],\n          });\n        })\n        .catch(() => {\n          this.setState({\n            message: \"ERROR: Unable to delete all files\",\n          });\n        });\n    }\n\n\n\n    render() {\n        const { selectedFiles, currentFile, progress, message, fileInfos } = this.state;\n    \n        return (\n          <div>\n            \n            <div className=\"card\">\n              <div className=\"card-header\">Professor Marvin</div>\n              <ul className=\"list-group list-group-flush\">\n                {fileInfos.map((currFile) => (\n                  <li className=\"list-group-item\" key={currFile.index}>\n                    <div>\n                      <a className=\"card-text-big\" href={/*require(\"./../pdf_uploads/\"+currFile.file.name)*/\"/static/media/\"+currFile.file.name} target=\"_blank\" rel=\"noreferrer\">{currFile.file.name}</a>\n                      &nbsp;&nbsp;&nbsp;&nbsp;\n                      <button className=\"btn btn-delete\" onClick={async () => {await this.removeFile(currFile.file.name);}}>Remove</button>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n            \n            <aside className=\"selected-file-wrapper\">\n              <br></br>\n              <button \n                className=\"btn btn-delete-all\"\n                disabled={this.state.fileInfos.length == 0}\n                onClick={this.deleteAll}>\n                Delete All Files\n              </button>\n            </aside>\n\n           <input type=\"submit\"value=\"Find\" style=\"float: right\" />\n            <div style=\"overflow: hidden; padding-right: .5em;\">\n              <input type=\"text\" style=\"width: 100%;\" />\n            </div>\n\n\n            <aside>\n              <br></br>\n              <a href=\"/upload_page\">\n                <button \n                  className=\"btn btn-go-to-upload\">\n                  &lt; Edit Files\n                </button>\n              </a>\n            </aside>\n          </div>\n        );\n    }    \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}