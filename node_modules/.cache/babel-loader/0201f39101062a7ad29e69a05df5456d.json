{"ast":null,"code":"import http from \"../http-common\";\nclass UploadFilesService {\n  constructor() {\n    this.upload = async (file, onUploadProgress) => {\n      let formData = new FormData();\n      formData.append('File', file);\n      console.log(\"INFO\");\n      console.log(formData);\n      console.log(Object.fromEntries(formData.entries()));\n      let response = await fetch('/url_route', {\n        method: 'post',\n        body: data\n      });\n      let res = await response.json();\n      if (res.status !== 1) {\n        alert('Error uploading file');\n      }\n\n      /*\n      return http.post(\"/upload\", formData, {\n        dataType : 'json',\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        onUploadProgress,\n      });\n      */\n\n      /*\n      fetch(\"/upload\", {\n       \n          // Adding method type\n          method: \"POST\",\n           \n          // Adding body or contents to send\n          body: JSON.stringify(formData),\n           \n          // Adding headers to the request\n          headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n      })\n      */\n    };\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\nexport default new UploadFilesService();","map":{"version":3,"names":["http","UploadFilesService","upload","file","onUploadProgress","formData","FormData","append","console","log","Object","fromEntries","entries","response","fetch","method","body","data","res","json","status","alert","getFiles","get"],"sources":["/Users/arjavpatel/Documents/EECS_449/marvin-app/src/components/services/upload-files.service.js"],"sourcesContent":["import http from \"../http-common\";\n\nclass UploadFilesService {\n  upload = async(file, onUploadProgress) => {\n    let formData = new FormData();\n\n    formData.append('File', file);\n    console.log(\"INFO\");\n    console.log(formData);\n    console.log(Object.fromEntries(formData.entries()));\n\n    let response = await fetch('/url_route',\n      {\n        method: 'post',\n        body: data,\n      }\n    );\n    let res = await response.json();\n    if (res.status !== 1){\n      alert('Error uploading file');\n    }\n    \n    /*\n    return http.post(\"/upload\", formData, {\n      dataType : 'json',\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n    */\n    \n\n    /*\n    fetch(\"/upload\", {\n     \n        // Adding method type\n        method: \"POST\",\n         \n        // Adding body or contents to send\n        body: JSON.stringify(formData),\n         \n        // Adding headers to the request\n        headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n    })\n    */\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new UploadFilesService();"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AAEjC,MAAMC,kBAAkB,CAAC;EAAA;IAAA,KACvBC,MAAM,GAAG,OAAMC,IAAI,EAAEC,gBAAgB,KAAK;MACxC,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAE7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;MAC7BK,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;MACrBG,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,WAAW,CAACN,QAAQ,CAACO,OAAO,EAAE,CAAC,CAAC;MAEnD,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EACrC;QACEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC;MACR,CAAC,CACF;MACD,IAAIC,GAAG,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAC/B,IAAID,GAAG,CAACE,MAAM,KAAK,CAAC,EAAC;QACnBC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;;MAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAGI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,CAAC;EAAA;;EAEDC,QAAQ,GAAG;IACT,OAAOtB,IAAI,CAACuB,GAAG,CAAC,QAAQ,CAAC;EAC3B;AACF;AAEA,eAAe,IAAItB,kBAAkB,EAAE"},"metadata":{},"sourceType":"module"}